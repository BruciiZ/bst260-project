---
title: "BST 260 Final Project - COVID-19 Data"
author: "Weixuan Dong, Danny Lee, Bruce Zhou"
format:
  html:
    toc: TRUE
    toc_float: TRUE
    smooth-scroll: TRUE
execute:
  echo: false
  warning: false
bibliography: references.bib
---

# Load libraries

```{r}
require(tidyverse)
require(dplyr)
require(lubridate)
require(knitr)
require(ggsignif)
```

# Load data

```{r}
rm(list = ls())
load('../data/dat.rda')
load('../data/deaths_all.rda')
```

# Introduction

The COVID-19 pandemic, first reported in Wuhan in late 2019, is a respiratory disease caused by the severe acute respiratory syndrome coronavirus 2 (SARS-Cov-2) [@shi_2020_an; @covid2021modeling]. The SAR-Cov-2 virus rapidly spread from China to the rest of the world in early 2020, and has constituted arguably the most severe global health crisis the 21st century has seen so far. Beyond its direct impact on human health, the outbreak of COVID-19 has exerted indelible influence on societies, economies, and the healthcare systems. In the early phase of the COVID-19 pandemic, it was known to cause irreversible pneumonia, high fever, and dry cough [@madabhavi2020covid]. Silvestri et al. (2020) identified four stages of the early variants of the SARS-Cov-2 virus: upper respiratory infection, pneumonia, cytokine storm, and in the worse scenario, death [@stasi2020treatment].

The rapid transmission of the COVID-19 virus was possibly due to its unique characteristic: asymptomatic transmission. Compared with coronaviruses identified previously such as the MERS-Cov, many of the COVID-19 infected patients did not show any symptoms when they first contracted the virus. However, they already became carriers, and the virus already started spreading from them through air, body fluid exchange, or aerosols [@gao2021systematic]. The asymptomatic transmission feature accelerated the wide spread of the COVID-19 virus, and at the same time hindered the containment efforts led by the healthcare agencies. What's more, as the pandemic progressed and vaccines were developed, the SARS-Cov-2 virus exhibited a high rate of escape and mutation, leading to a variety of variants including alpha, beta, delta, and omicron. These variants showed differences in their transmissibility, virulence, and the ability to evade the immune system. Because of this, even vaccines, which used to be taken as the ultimate measure to end any pandemic, proved to fall short of people's expectation in controlling this worldwise crisis [@vasireddy2021review]. As a result, the majority of the governments announced emergency measures ranging from mask mandates, social distancing, regular sterilization, and even full lock-down of cities [@koh2020covid].

Globally, what the COVID-19 imposed was not merely a challenge in the field of public health, but also a multi-faceted catastrophe. For instance, restrictions on freight transport wreaked great havoc on international transactions and businesses. Consequently, the economic systems of countries around the globe were heavily struck, especially for those which rely greatly on exports. A cascade of its adverse effects was reflected by high rate of unemployment, corporation bankruptcy, disruptions to supply chains, and a switch in working/learning mode. To the healthcare system, COVID-19 meant extraordinary pressure on the infrastructures. Hospitals were often confronted with an overwhelming number of infected patients, while experiencing a lack of medical professionals also due to COVID-19 transmission.

Especially in the United States, the COVID-19 pandemic has been complicated and exacerbated by various factors [@omer2020covid; @covid2021modeling]. Given the high degree of autonomy of each state in the US, significant variations could be seen across states due to discrepancies in regional public health policies, demographics, and economic development. Previous studies have suggested that the ethnic minorities, middle- and low-income populations, and the rural communities were relatively more vulnerable to this emergency. These populations often suffer from pre-existing health inequities and consequently disproportional rates of mortality were reported [@alcendor2020racial; @wilder2021disproportionate].

The US Centers for Disease Control and Prevention (CDC) provides an excellent platform for collecting and sharing COVID-19 related data. These data enable us to study the progression and impact of COVID-19 throughout the pandemic period. We can expect that different states might have responded differently: adopting distinct strategies for containment and mitigation. Additionally, as the COVID-19 virus mutated, multiple waves could be identified, which were driven by seasonal changes, vaccine effectiveness, and the fatality rate. Understanding these patterns is vital to assessing the evolution of the SARS-Cov-2 virus, regional differences, and the virulence over time.

In this project, we examined the COVID-19 data provided by the CDC COVID-19 Response, including COVID-19 cases, COVID-related deaths, and hospitalization from Jan 25th, 2020 to Nov 30th, 2024. Leveraging data analysis and visualization, this study aims to identify major waves of the COVID-19 pandemic in the US, and answer the following questions 1) which states generally responded to the pandemic better, 2) how the virulence of the SARS-Cov-2 virus evolved to understand the regional differences and seasonal changes in the transmissibility of the virus. In addition, we also seek to estimate the weekly excess mortality for each state during the pandemic period, and investigate whether the regional differences could be observed and whether COVID-19 was the driving factor. We hypothesize that states along the west and east coasts would generally have better performance during the pandemic due to stronger healthcare infrastructure. We also hypothesize that the COVID-19 virus became less virulent over time as typically viruses do not possess high virulence and high contagiousness.

# Analyses

## Pandemic period from Jan 2020 to Nov 2024

The figure below displays the COVID-19 cases, deaths, and hospitalization rate per 100,000 people in each region of the US from 2020 to 2024.

```{r trend plots, echo=FALSE, warning=FALSE}
# Define custom labels for the facets
dat.labs <- c("cases" = "COVID-19 Cases", "deaths" = "Deaths", "hosp" = "Hospitalizations")

# Apply to the ggplot code
dat %>%
  pivot_longer(cols = c("cases", "deaths", "hosp"), names_to = "outcome", values_to = "count") %>%
  mutate(rate = count * 100000 / population) %>%
  ggplot(aes(x = date, y = rate, group = state, color = region_name)) +
  geom_line(linewidth = 1, alpha = 0.7) + # Thicker lines for better visibility
  facet_wrap(~outcome, ncol = 1, scales = "free", labeller = labeller(outcome = as_labeller(dat.labs))) +
  scale_x_date(
    breaks = "6 months", # Show a date label every 6 months
    date_labels = "%b %Y" # Format the labels as "Month Year" (e.g., Jan 2021)
  ) +
  theme_minimal(base_size = 14) + # Use a cleaner theme with larger base font
  theme(
    strip.text = element_text(face = "bold", size = 14), # Bold facet labels
    legend.position = "bottom", # Move legend to bottom for better space usage
    legend.title = element_text(face = "bold"), # Bold legend title
    axis.title = element_text(face = "bold"), # Bold axis titles
    axis.text.y = element_text(size = 10), # Slightly larger axis text for readability
    axis.text.x = element_text(size = 8, angle = 10),
    panel.grid.minor = element_blank() # Remove minor grid lines for a cleaner look
  ) +
  labs(
    x = "Date",
    y = "Rate (per 100,000 people)",
    color = "Region",
    title = "Rates of Cases, Deaths, and Hospitalizations Over Time (State Level)",
    subtitle = "Data displayed per 100,000 people by region"
  )

# ggsave(filename = "../output/covidwaves.pdf",plot = p1, dpi = 300, width = 14, height = 8, units = "in")
```

As can be seen from the trend plot which depicts the rates of COVID-19 cases, deaths, and hospitalizations from 01/25/2021 to 11/30/2024, there seems to be 3 waves of COVID-19 spread. The first one occurs from Oct 2020 to Apr 2021, where a peak in cases, deaths, and hospitalizations can be observed. Likewise, it appears that there was another wave between Jul 2021 to early Dec 2021. Lastly, there was a wave from early Dec 2021 to Apr 2022.

**First Wave**

This period marked the first significant rise in COVID-19 rates, with sharp increases across all metricsâ€”cases, deaths, and hospitalizations. The wave coincides with the colder months when indoor gatherings increased and may also reflect the impact of delayed public health measures or variants circulating during this time. The peak of this wave aligns with the early rollout of vaccines, which likely contributed to its decline as more people gained access to immunization.

**Second Wave**

The summer and early winter of 2021 saw a resurgence in COVID-19 activity, driven largely by the spread of the Delta variant. This wave demonstrates a rapid increase in hospitalizations and deaths following the initial rise in cases. Despite vaccination efforts, breakthrough infections and the highly contagious nature of Delta played significant roles in this period. Public health measures such as mask mandates were reinstituted in some areas, but the surge continued through the fall.

**Third Wave**

The final and most intense wave depicted occurred during the winter of 2021-2022, fueled by the Omicron variant. While cases skyrocketed to unprecedented levels due to Omicron's transmissibility, deaths and hospitalizations rose less dramatically than in previous waves, likely reflecting the variant's comparatively milder effects and increased vaccination coverage. However, the healthcare system faced immense strain due to the sheer number of cases.

## Deaths rate by state during each time period

```{r separately save each time period}
wave1dat <- dat %>%
  filter(date >= make_date(2020, 10, 1), date <= make_date(2021, 4, 1)) %>%
  group_by(state) %>%
  summarise(
    cum_death = sum(deaths, na.rm = TRUE),
    population = mean(population, na.rm = TRUE),
    death_rate = cum_death * 100000 / population
  ) %>%
  ungroup()

wave2dat <- dat %>%
  filter(date >= make_date(2021, 7, 1), date <= make_date(2021, 12, 1)) %>%
  group_by(state) %>%
  summarise(
    cum_death = sum(deaths, na.rm = TRUE),
    population = mean(population, na.rm = TRUE),
    death_rate = cum_death * 100000 / population
  ) %>%
  ungroup()

wave3dat <- dat %>%
  filter(date >= make_date(2021, 12, 2), date <= make_date(2022, 4, 1)) %>%
  group_by(state) %>%
  summarise(
    cum_death = sum(deaths, na.rm = TRUE),
    population = mean(population, na.rm = TRUE),
    death_rate = cum_death * 100000 / population
  ) %>%
  ungroup()

# write_csv(wave1dat,file = "../output/wave1dat.csv")
# write_csv(wave2dat,file = "../output/wave2dat.csv")
# write_csv(wave3dat,file = "../output/wave3dat.csv")
```

From Oct 1st 2020 to Apr 1st 2021, overall this wave was arguably the most severe wave among all 3. The highest death rate per 100,000 people was reported in South Dakota (SD), with an average of 188.91 deaths among 100,000 people. Following South Dakota were North Dakota (177.97), Oklahoma (175.32), and Arkansas (150.17). There were also states which managed to contain the death rate below 50 per 100,000. For example, the lowest death rate was reported in Hawaii, which was only 9.12 deaths on average per 100,000 people, followed by Vermont (11.18), Alaska (26.48), Washington (39.58), Oregon (42.04), Puerto Rico (43.66), and Maine (47.19).

From July 1st 2021 to Dec 1st 2021, the COVID-19 variant seemed to be less virulent. The highest death rate per 100,000 people was reported in West Virginia (WV), with an average of 113.13 deaths among 100,000 people. Following West Virginia were Florida  (111.62), Montana (111.30), and Wyoming (109.88). There were also states which managed to contain the death rate below 40 per 100,000. For example, the lowest death rate was reported in Washington D.C., which was only 12.09 deaths on average per 100,000 people, followed by Vermont (12.39), Connecticut (12.39), New York (17.04), and Hawaii (36.83).

For the third wave, the COVID-19 variant during the period seemed to grow more infectious and deadly. The highest death rate per 100,000 people was reported in West Virginia (WV) again, with an average of 103.73 deaths among 100,000 people. Following West Virginia were Ohio (102.05), New Mexico (96.78), and Kentucky (93.82). There were also states which managed to contain the death rate below 40 per 100,000. For example, the lowest death rate was reported in Hawaii, which was only 20.76 deaths on average per 100,000 people, followed by Alaska (27.69), Puerto Rico (28.21), Vermont (29.85), and Utah (33.22). Figures can be found in **Supplementary Methods**.

We also compared the performance of each state across all 3 waves by taking the average of their death rate per 100,000 people. Results show that Oklahoma had the highest average death rate per 100,000, amounting to 120.00 deaths per 100,000 people, followed by West Virginia (115.33), Mississippi (109), Kentucky (107.42), Tennessee (106.92). There were also states which kept a relatively low death rate across waves. Namely, Vermont had an average death rate of only 17.81 per 100,000. Similarly, Hawaii had an average of 22.24 per 100,000, followed by Puerto Rico (30.94) New York (37.10), and Washington (40.07).

Generally, it can be seen that states in the northeastern part or the west coast of the US performed better than those in the middle or west US. It can also be observed that less populated states such as Vermont and Washington had lower death rates. But exceptions are also evident, for New York is rather populated but it was among the states with the lowest average death rates.

```{r}
wave1dat$wave <- "Wave 1"
wave2dat$wave <- "Wave 2"
wave3dat$wave <- "Wave 3"
allWaves <- rbind(wave1dat, wave2dat, wave3dat)

allWaves %>%
  group_by(state) %>%
  summarise(avg_death_rate = mean(death_rate, na.rm = T)) %>%
  ungroup() %>%
  ggplot(aes(x = reorder(state, avg_death_rate), y = avg_death_rate, fill = avg_death_rate)) + # Add `fill` aesthetic
  geom_col() +
  scale_fill_gradient2(low = "#FFE5B4", mid = "#FFA500", high = "#800000") + # Define gradient colors
  coord_flip() +
  theme_minimal(base_size = 14) + # Minimal theme for better readability
  theme(
    axis.title.y = element_blank(), # Remove y-axis title for a cleaner look
    axis.title.x = element_text(face = "bold"), # Bold x-axis title
    axis.text = element_text(size = 6), # Slightly larger axis text
    legend.title = element_text(face = "bold"), # Bold legend title
    panel.grid.minor = element_blank(),
    legend.position = "right" # Position legend to the right
  ) +
  labs(
    y = "Average Death Rate (per 100,000)",
    fill = "Average Death Rate",
    title = "Average COVID-19 Death Rates by State across 3 Waves",
    subtitle = "Data from Oct 1st 2020 to Apr 1st 2022"
  )
```

## COVID-19 became less or more virulent across different periods

To evaluate if COVID-19 became less or more virulent across different time periods, we will employ three key metrics: **cases fatality rate (CFR)**, **hospitalization rate (HR)**, and **death per population (DP)**. The CFR is defined as deaths per case, HR is defined as hospitalizations per case, and DP is defined as deaths per population. In the following analyses, we will analyze these key metrics with figures and visualizations.

### Pair-wise comparison of the key metrics

```{r warning=FALSE}
pooled.dat <- dat %>%
  mutate(Wave = case_when(
    date >= make_date(2020, 10, 1) & date <= make_date(2021, 4, 1) ~ "Wave 1",
    date >= make_date(2021, 7, 1) & date <= make_date(2021, 12, 1) ~ "Wave 2",
    date >= make_date(2021, 12, 2) & date <= make_date(2022, 4, 1) ~ "Wave 3",
    .default = NA
  )) %>%
  filter(!is.na(Wave)) %>%
  group_by(Wave, state) %>%
  summarise("Total Cases" = sum(cases, na.rm = T),
            "Total Deaths" = sum(deaths, na.rm = T),
            "Total Hospitalization" = sum(hosp, na.rm = T),
            "Total Population" = mean(population, na.rm = T), .groups = "drop") %>%
  ungroup()

metric.dat <- pooled.dat %>%
  mutate(CFR = `Total Deaths` * 100000 / `Total Cases`,
         HR = `Total Hospitalization` * 100000 / `Total Cases`,
         DP = `Total Deaths` * 100000 / `Total Population`)


metric.dat %>%
  ggplot(aes(x = Wave, y = CFR, fill = Wave)) +
  geom_boxplot() +
  geom_signif(
    comparisons = list(
      c("Wave 1", "Wave 2"),
      c("Wave 1", "Wave 3"),
      c("Wave 2", "Wave 3")
    ),
    y_position = c(2500, 2700, 3000), # Adjust for clear separation
    test = wilcox.test,
    map_signif_level = function(p) {
      if (p >= 0.001) {
        sprintf("p-value = %.3f", p)
      } else {
        "p < 0.001"
      }
    }
  ) +
  theme_minimal(base_size = 14) + # Slightly increase the base font size
  theme(
    legend.position = "none",
    axis.title = element_text(size = 14, face = "bold"),
    axis.text = element_text(size = 12),
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5)
    # plot.margin = margin(t = 10, r = 10, b = 10, l = 10)
  ) +
  labs(
    title = "Case Fatality Rate (CFR) Across Waves",
    x = "Wave",
    y = "Case Fatality Rate (per 100,000)"
  ) +
  annotate(
    "text",
    x = 0, y = 3200, # Adjust position based on your data range
    label = "Test: Wilcoxon Rank-Sum Test",
    hjust = 0, size = 3, color = "black", fontface = "italic"
  )

metric.dat %>%
  ggplot(aes(x = Wave, y = HR, fill = Wave)) +
  geom_boxplot() +
  geom_signif(
    comparisons = list(
      c("Wave 1", "Wave 2"),
      c("Wave 1", "Wave 3"),
      c("Wave 2", "Wave 3")
    ),
    y_position = c(16000, 18000, 20000), # Adjust for clear separation
    test = wilcox.test,
    map_signif_level = function(p) {
      if (p >= 0.001) {
        sprintf("p-value = %.3f", p)
      } else {
        "p < 0.001"
      }
    }
  ) +
  theme_minimal(base_size = 14) + # Slightly increase the base font size
  theme(
    legend.position = "none",
    axis.title = element_text(size = 14, face = "bold"),
    axis.text = element_text(size = 12),
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5)
    # plot.margin = margin(t = 10, r = 10, b = 10, l = 10)
  ) +
  labs(
    title = "Hospitalization Rate (HR) Across Waves",
    x = "Wave",
    y = "Hospitalization Rate (per 100,000)"
  ) +
  annotate(
    "text",
    x = 0, y = 21000, # Adjust position based on your data range
    label = "Test: Wilcoxon Rank-Sum Test",
    hjust = 0, size = 3, color = "black", fontface = "italic"
  )

metric.dat %>%
  ggplot(aes(x = Wave, y = DP, fill = Wave)) +
  geom_boxplot() +
  geom_signif(
    comparisons = list(
      c("Wave 1", "Wave 2"),
      c("Wave 1", "Wave 3"),
      c("Wave 2", "Wave 3")
    ),
    y_position = c(200, 220, 240), # Adjust for clear separation
    test = wilcox.test,
    map_signif_level = function(p) {
      if (p >= 0.001) {
        sprintf("p-value = %.3f", p)
      } else {
        "p < 0.001"
      }
    }
  ) +
  theme_minimal(base_size = 14) + # Slightly increase the base font size
  theme(
    legend.position = "none",
    axis.title = element_text(size = 14, face = "bold"),
    axis.text = element_text(size = 12),
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5)
    # plot.margin = margin(t = 10, r = 10, b = 10, l = 10)
  ) +
  labs(
    title = "Death per Population (DP) Across Waves",
    x = "Wave",
    y = "Death per Population (per 100,000)"
  ) +
  annotate(
    "text",
    x = 0, y = 250, # Adjust position based on your data range
    label = "Test: Wilcoxon Rank-Sum Test",
    hjust = 0, size = 3, color = "black", fontface = "italic"
  )

# kruskal.test(CFR ~ Wave, data = metric.dat)
# pairwise.wilcox.test(metric.dat$CFR, metric.dat$Wave,
#                  p.adjust.method = "BH")
```

### Aggregated Metrics Across Wave

```{r}
# Define custom labels for the facets
dat.labs <- c("CFR" = "Cases Fatality Rate", "HR" = "Hospitalization Rate", "DP" = "Death per Population")

pooled.dat %>%
  group_by(Wave) %>%
  summarise("Total Cases" = sum(`Total Cases`, na.rm = T),
            "Total Deaths" = sum(`Total Deaths`, na.rm = T),
            "Total Hospitalization" = sum(`Total Hospitalization`, na.rm = T),
            "Total Population" = sum(`Total Population`, na.rm = T)) %>%
  ungroup() %>%
  mutate(CFR = `Total Deaths` * 100000 / `Total Cases`,
         HR = `Total Hospitalization` * 100000 / `Total Cases`,
         DP = `Total Deaths` * 100000 / `Total Population`) %>%
  kable("simple")

# pooled.dat %>%
#   group_by(Wave) %>%
#   summarise("Total Cases" = sum(`Total Cases`, na.rm = T),
#             "Total Deaths" = sum(`Total Deaths`, na.rm = T),
#             "Total Hospitalization" = sum(`Total Hospitalization`, na.rm = T),
#             "Total Population" = sum(`Total Population`, na.rm = T)) %>%
#   ungroup() %>%
#   mutate(CFR = `Total Deaths` * 100000 / `Total Cases`,
#          HR = `Total Hospitalization` * 100000 / `Total Cases`,
#          DP = `Total Deaths` * 100000 / `Total Population`) %>%
#   pivot_longer(
#     cols = c(CFR, HR, DP),
#     names_to = "metric",
#     values_to = "rate"
#   ) %>%
#   ggplot(aes(x = Wave, y = rate, fill = metric)) +
#   geom_col(show.legend = FALSE) +
#   facet_wrap(
#     ~ metric, 
#     scales = "free", 
#     labeller = labeller(metric = dat.labs)
#   ) +
#   scale_fill_brewer(palette = "Set2") +
#   theme_minimal() +
#   theme(
#     strip.text = element_text(size = 12, face = "bold"),
#     axis.text.x = element_text(angle = 45, hjust = 1),
#     plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
#     axis.title = element_text(size = 12, face = "bold")
#   ) +
#   labs(
#     title = "COVID-19 Aggregated Virulence Metrics by Wave",
#     x = "Wave",
#     y = "Rate (per 100,000)"
#   )
```

We also compared the average performance of each state across all 3 waves.

```{r}
# Calculate CFR for each wave
wave1_cfr <- dat |>
  filter(date >= make_date(2020, 10, 1), date <= make_date(2021, 4, 1)) |>
  group_by(state) |>
  summarise(
    cum_cases = sum(cases, na.rm = TRUE),
    cum_deaths = sum(deaths, na.rm = TRUE),
    cfr = ifelse(cum_cases > 0, cum_deaths / cum_cases * 100, NA)
  )

wave2_cfr <- dat |>
  filter(date >= make_date(2021, 7, 1), date <= make_date(2021, 12, 1)) |>
  group_by(state) |>
  summarise(
    cum_cases = sum(cases, na.rm = TRUE),
    cum_deaths = sum(deaths, na.rm = TRUE),
    cfr = ifelse(cum_cases > 0, cum_deaths / cum_cases * 100, NA)
  )

wave3_cfr <- dat |>
  filter(date >= make_date(2021, 12, 2), date <= make_date(2022, 4, 1)) |>
  group_by(state) |>
  summarise(
    cum_cases = sum(cases, na.rm = TRUE),
    cum_deaths = sum(deaths, na.rm = TRUE),
    cfr = ifelse(cum_cases > 0, cum_deaths / cum_cases * 100, NA)
  )

# Combine CFR data
wave1_cfr$wave <- "Wave 1"
wave2_cfr$wave <- "Wave 2"
wave3_cfr$wave <- "Wave 3"
cfr_data <- bind_rows(wave1_cfr, wave2_cfr, wave3_cfr)

# Visualize CFR trends
cfr_data |>
  ggplot(aes(x = wave, y = cfr, fill = wave)) +
  geom_boxplot(outlier.shape = NA) +
  theme_minimal(base_size = 14) +
  labs(
    x = "Wave",
    y = "Case Fatality Rate (CFR) (%)",
    title = "Case Fatality Rate by Wave",
    subtitle = "Comparison of CFR across 3 Waves"
  )
```

To evaluate virulence, we calculate Case Fatality Rate (CFR) across waves. CFR is calculated as $CFR = \frac{Cumulative Deaths}{Cumulative Cases} \cdot 100$. 
We can clearly see from the plot that COVID-19 became less virulent across the three waves, as evidenced by the declining CFR from Wave 1 to Wave 3. While the initial wave saw a relatively high median CFR around 1.5%, this dropped progressively in subsequent waves, reaching below 1% by Wave 3. The reduction in fatality rates is likely due to increased vaccination coverage, improved medical responses, and healthcare system adaptations.

## Q4: Estimate excess mortality for each week for each state. Check if excess mortality can be explained by COVID-19

```{r}
library(tidyr)
library(purrr)
library(broom)
library(ggplot2)

dat <- dat %>% 
  rename(covid_deaths = deaths) # renaming for clarity

##############################
# 1. Prepare historical data (2015-2019)
##############################

# Filter historical period
historical_data <- deaths %>%
  filter(mmwr_year >= 2015 & mmwr_year <= 2019) 

##############################
# 2. Fit Linear Models to Estimate Baseline
##############################

# We'll fit a simple linear model per state predicting all_cause_deaths
# from mmwr_year and mmwr_week. You could add more complex seasonality terms,
# such as using sin/cos of week or factorized weeks, but here's a simple approach.

models <- historical_data %>%
  group_by(state_name) %>%
  do(
    model = lm(all_cause_deaths ~ mmwr_year + mmwr_week, data = .)
  )

##############################
# 3. Predicting Expected Deaths for 2020â€“2024
##############################

# Filter data for prediction period (2020+)
future_data <- deaths %>%
  filter(mmwr_year >= 2020)

# Generate predictions by applying each state's model to its future_data
future_predictions <- future_data %>%
  group_by(state_name) %>%
  nest() %>%
  left_join(models, by = "state_name") %>%
  mutate(predictions = map2(data, model, ~augment(.y, newdata = .x))) %>%
  unnest(predictions) %>%
  ungroup()

# Now `future_predictions` contains:
# - all original columns from `future_data`
# - .fitted: predicted (expected) deaths
# - .se.fit, .resid, etc., if needed

##############################
# 4. Calculate Excess Mortality
##############################

future_predictions <- future_predictions %>%
  mutate(excess_deaths = all_cause_deaths - .fitted)

##############################
# 5. Merge With COVID-19 Deaths
##############################

# Ensure `dat` also has mmwr_year, mmwr_week, and state_name for the same weeks
analysis_data <- future_predictions %>%
  left_join(dat %>% select(state_name, mmwr_year, mmwr_week, covid_deaths),
            by = c("state_name", "mmwr_year", "mmwr_week"))

# Now `analysis_data` has: all_cause_deaths, expected deaths (.fitted), excess_deaths, and covid_deaths

##############################
# 6. Visualizations
##############################

analysis_data <- analysis_data %>%
  filter(!state_name %in% c("New York City", "United States")) %>%
  # Approximate a date from mmwr_year and mmwr_week:
  mutate(approx_date = as.Date(paste(mmwr_year, mmwr_week, 1, sep="-"), "%Y-%U-%u"))

# Facet by state to get a quick overview:
p_all_states <- analysis_data %>%
  ggplot(aes(x = approx_date)) +
  geom_line(aes(y = excess_deaths, color = "Excess Deaths")) +
  geom_line(aes(y = covid_deaths, color = "COVID-19 Deaths")) +
  facet_wrap(~ state_name, scales = "free_y") +
  labs(title = "Excess vs. COVID-19 Deaths by State",
       x = "Date", 
       y = "Number of Deaths",
       color = "") +
  theme_minimal()

print(p_all_states)

# If you have many states and the plot looks crowded, consider plotting one state at a time or saving to a file:
# Example of saving one plot per state:
# unique_states <- unique(analysis_data$state_name)
# for (st in unique_states) {
#   p_state <- analysis_data %>%
#     filter(state_name == st) %>%
#     ggplot(aes(x = approx_date)) +
#     geom_line(aes(y = excess_deaths, color = "Excess Deaths")) +
#     geom_line(aes(y = covid_deaths, color = "COVID-19 Deaths")) +
#     labs(title = paste("Excess vs. COVID-19 Deaths:", st),
#          x = "Date",
#          y = "Number of Deaths",
#          color = "") +
#     theme_minimal()
#   
#   ggsave(filename = paste0("excess_vs_covid_", st, ".png"), plot = p_state, width = 8, height = 5)
# }

##############################
# 7. Statistical Tests by State
##############################
all_states <- unique(analysis_data$state_name)

# Initialize a list to store the combined results for each state
all_state_results <- list()

for (st in all_states) {
  # Filter data for this state
  state_data <- analysis_data %>%
    filter(state_name == st)
  
  # Check if there's enough data for a model
  valid_points <- sum(!is.na(state_data$excess_deaths) & !is.na(state_data$covid_deaths))
  if (valid_points < 2) {
    # Not enough data to run a model, store placeholder
    all_state_results[[st]] <- data.frame(
      state_name = st,
      term = NA_character_,
      estimate = NA_real_,
      std.error = NA_real_,
      statistic = NA_real_,
      p.value = NA_real_,
      r.squared = NA_real_
    )
    next
  }
  
  # Try fitting the model
  fit_result <- tryCatch({
    lm(excess_deaths ~ covid_deaths, data = state_data)
  }, error = function(e) NULL)
  
  if (is.null(fit_result)) {
    # Model failed, store placeholder
    all_state_results[[st]] <- data.frame(
      state_name = st,
      term = NA_character_,
      estimate = NA_real_,
      std.error = NA_real_,
      statistic = NA_real_,
      p.value = NA_real_,
      r.squared = NA_real_
    )
    next
  }
  
  # Get coefficient details
  tidied <- broom::tidy(fit_result)
  # Get model-level statistics (including r.squared)
  glanced <- broom::glance(fit_result)
  
  # Add state_name and r.squared to each coefficient row
  tidied$state_name <- st
  tidied$r.squared <- glanced$r.squared
  
  all_state_results[[st]] <- tidied
}

# Combine all states into one data frame
final_results <- do.call(rbind, all_state_results)

# `final_results` now contains:
# state_name, term (Intercept or covid_deaths), estimate, std.error, statistic, p.value, and r.squared

final_results <- final_results %>%
  filter(!state_name %in% c("New York City", "United States"))
library(knitr)

final_results <- final_results %>%
  select(state_name, term, estimate, std.error, statistic, p.value, r.squared)

# Now neatly display the table
final_results %>%
  kable(digits = 3, caption = "Model Results by State") 

# Save plot to figs folder as a PNG
# ggsave(filename = "../output/excess_vs_covid_all_states.png", plot = p_all_states, width = 10, height = 8)
# write.csv(final_results, "../output/excess_mortality_models.csv", row.names = FALSE)


##############################
# 8. Interpret Results
##############################

# If the summary of lm_result shows covid_deaths is a strong predictor (high R-squared, significant p-value),
# this indicates COVID-19 deaths explain a large portion of excess mortality.
# If correlation is high and the slope ~ 1, it suggests a strong direct relationship.

##############################
# Additional Considerations:
##############################

### might want to incorporate seasonality more explicitly (e.g., factor(mmwr_week)) in the baseline model.
### Try more advanced models (ARIMA, GAM) for better baseline estimation?
```

We are first using 2015-2019 US mortality data grouped by states to estimate the 2020-2023 mortality by all causes (not limited to deaths caused by Covid-19). Then we calculate excess mortality by subtracting the estimated deaths from observed deaths of 2020-2023. This is depicted as blue line in the plot. Now, we plot the deaths which the culprit is Covid-19 via red line to see whether the excess mortality is well explained by Covid-19. We can see that in most of the states, COVId-19 is indeed the main culprit of excess mortality from 2020-2023. However, some states such as New Hampshire, Oregon, Puerto Rico, and Washington do not have a similar trend of lines between COVID-19 deaths and Excess deaths, meaning COVID-19 does not explain the excess mortality that well.

Second, we conducted additional analysis of fitting the linear model with COVID-19 deaths being the covariate and excess deaths being the outcome variable. The results of the model advocated the findings that we have roughly found from the plot. The R-squared values of each state's model showed that New Hampshire(0.236), Oregon(0.301), Puerto Rico(0.194), and Washington(0.257)'s respective R-squared values were all low compared to other states. Some states such as New Jersey, North Dakota, and South Dakota showed very high R-squared values of 0.851, 0.849, and 0.857 respectively which corresponded to the alignment of Covid caused deaths and excess deaths in the plot.

Overall, we can conclude that COVID-19 fairly explains the excess mortality in the United States during 2020-2023 well!

# Supplementary Methods {#sec-introduction}

## Death rate of each state (3 waves)

```{r death rate by state}

wave1dat %>%
  ggplot(aes(x = reorder(state, death_rate), y = death_rate, fill = death_rate)) + # Add `fill` aesthetic
  geom_col() +
  scale_fill_gradient(low = "#FFA5A5", high = "#AA0000") + # Define gradient colors
  coord_flip() +
  theme_minimal(base_size = 14) + # Minimal theme for better readability
  theme(
    axis.title.y = element_blank(), # Remove y-axis title for a cleaner look
    axis.title.x = element_text(face = "bold"), # Bold x-axis title
    axis.text = element_text(size = 6), # Slightly larger axis text
    legend.title = element_text(face = "bold"), # Bold legend title
    panel.grid.minor = element_blank(),
    legend.position = "right" # Position legend to the right
  ) +
  labs(
    y = "Death Rate (per 100,000)",
    fill = "Death Rate",
    title = "Cumulative COVID-19 Death Rates by State",
    subtitle = "Data from Oct 1st 2020 to Apr 1st 2021"
  )

wave2dat %>%
  ggplot(aes(x = reorder(state, death_rate), y = death_rate, fill = death_rate)) + # Add `fill` aesthetic
  geom_col() +
  scale_fill_gradient(low = "#FFA5A5", high = "#AA0000") + # Define gradient colors
  coord_flip() +
  theme_minimal(base_size = 14) + # Minimal theme for better readability
  theme(
    axis.title.y = element_blank(), # Remove y-axis title for a cleaner look
    axis.title.x = element_text(face = "bold"), # Bold x-axis title
    axis.text = element_text(size = 6), # Slightly larger axis text
    legend.title = element_text(face = "bold"), # Bold legend title
    panel.grid.minor = element_blank(),
    legend.position = "right" # Position legend to the right
  ) +
  labs(
    y = "Death Rate (per 100,000)",
    fill = "Death Rate",
    title = "Cumulative COVID-19 Death Rates by State",
    subtitle = "Data from Jul 1st 2021 to Dec 1st 2021"
  )

wave3dat %>%
  ggplot(aes(x = reorder(state, death_rate), y = death_rate, fill = death_rate)) + # Add `fill` aesthetic
  geom_col() +
  scale_fill_gradient(low = "#FFA5A5", high = "#AA0000") + # Define gradient colors
  coord_flip() +
  theme_minimal(base_size = 14) + # Minimal theme for better readability
  theme(
    axis.title.y = element_blank(), # Remove y-axis title for a cleaner look
    axis.title.x = element_text(face = "bold"), # Bold x-axis title
    axis.text = element_text(size = 6), # Slightly larger axis text
    legend.title = element_text(face = "bold"), # Bold legend title
    panel.grid.minor = element_blank(),
    legend.position = "right" # Position legend to the right
  ) +
  labs(
    y = "Death Rate (per 100,000)",
    fill = "Death Rate",
    title = "Cumulative COVID-19 Death Rates by State",
    subtitle = "Data from Dec 2nd 2021 to Apr 1st 2022"
  )
```
